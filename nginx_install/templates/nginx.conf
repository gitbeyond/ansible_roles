# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user {{nginx_run_user}};
#worker_processes auto;
worker_processes 4;
master_process on;
#worker_cpu_affinity 1000000000000000000000000000000000000000 0100000000000000000000000000000000000000
#0010000000000000000000000000000000000000 0001000000000000000000000000000000000000
#0000100000000000000000000000000000000000 0000010000000000000000000000000000000000
#0000001000000000000000000000000000000000 0000000100000000000000000000000000000000;

#worker_cpu_affinity 10000000000000000000000 01000000000000000000000
#00100000000000000000000 00010000000000000000000
#00001000000000000000000 00000100000000000000000
#00000010000000000000000 00000001000000000000000;

error_log {{nginx_log_dir}}/error.log;

pid {{nginx_var_dir}}/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
#include /usr/share/nginx/modules/*.conf;

events {
    use epoll;
    worker_connections  10240;
    worker_aio_requests 32;
    accept_mutex on;
    multi_accept on;
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  download '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"'; 

    log_format json_log escape=json '{"@timestamp": "$time_iso8601",'
                             '"remote_addr": "$remote_addr",'
                             '"remote_user": "$remote_user",'
                             '"remote_port": $remote_port,'
                             '"request": "$request",'
                             '"status": $status,'
                             '"body_bytes_sent": $body_bytes_sent,'
                             '"http_referer": "$http_referer",'
                             '"http_user_agent": "$http_user_agent",'
                             '"http_x_forwarded_for": "$full_x_forwarded_for",'
                             '"request_time": $request_time,'
                             '"request_id": "$req_id",'
                             '"uid_got": "$uid_got",'
                             '"uid_set": "$uid_set",'
                             '"upstream_response_time": "$upstream_response_time",'
                             '"upstream_addr": "$upstream_addr",'
                             '"upstream_cache_status": "$upstream_cache_status",'
                             '"upstream_status": "$upstream_status"}';
    map $upstream_response_time $utime {
        #default "100";
        "" 0;
        ~\d $upstream_response_time;
    }
    map $http_x_forwarded_for $full_x_forwarded_for {
        default "$http_x_forwarded_for, $realip_remote_addr";
        '' "$realip_remote_addr";
    }
    map $http_x_request_id $req_id {
        default   $http_x_request_id;
        ""        $request_id;
    }
    access_log  {{nginx_log_dir}}/access.log  main;

    server_tokens off;
    sendfile            on;
    aio                 on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65s;
    keepalive_requests 100; # default: 100
    types_hash_max_size 2048;
    
    client_max_body_size      20m; # default: 1m
    client_header_buffer_size 32k; # default: 1k
    large_client_header_buffers 4 128k;
    client_header_timeout     60s;
    client_body_buffer_size   32k; # default: 8k|16;
    client_body_timeout       60s;
    send_timeout              60s; # default: 60s

    # proxy
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $full_x_forwarded_for;
    proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
    # 这个似乎只在 location 内生效
    # 后测试发现，只要 location 内有一条 proxy_set_header, 那么其父级 server 段内的的 proxy_set_header 全部不会在此location内生效
    # 如果 location 内没有 proxy_set_header, 则只会采用 server 段的 proxy_set_header, 而不会采用 http 段的 proxy_set_header
    proxy_set_header X-Request-ID $req_id;
    proxy_buffer_size    8k; # default: 4k|8k
    proxy_buffering      on;  # default: on
    proxy_buffers      8 8k; # default: 8 4k|8k
    proxy_connect_timeout  60s; # default 60s
    proxy_http_version 1.0; # default: 1.0, options: 1.0|1.1 
    proxy_next_upstream_timeout 0; # default: 0
    proxy_next_upstream_tries   0; # default: 0
    proxy_read_timeout     60s; # default: 60s
    proxy_send_timeout     60s; # default: 60s
    #proxy_redirect default; # default: default
    proxy_socket_keepalive   off; # default: off
    
    # gzip
    gzip  on;
    gzip_min_length  1k;
    gzip_buffers  4 16k;
    gzip_http_version 1.1;
    gzip_comp_level   2;
    gzip_types  text/plain application/x-javascript text/css application/xml application/json application/javascript text/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon image/png image/jpg application/x-font-woff application/octet-stream;
    gzip_vary  on;

    #

    include       {{nginx_conf_dir}}/mime.types;
    default_type  application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include {{nginx_conf_dir}}/conf.d/*.conf;
    server {
        listen       80;
        server_name  localhost;
        root         {{nginx_base_dir}}/html;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page 404 /404.html;
        #location = /40x.html {
        #}
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        location /NginxStatus {
             stub_status     on;
             #access_log      {{nginx_log_dir}}/NignxStatus.log;
             access_log      off;
             #auth_basic      "NginxStatus";
             #auth_basic_user_file    htpasswd;
             allow 127.0.0.1;
             deny all;
        }
    }
}
